{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prabal gupta\\\\OneDrive\\\\Documents\\\\OpinioNect-figma\\\\client\\\\src\\\\components\\\\AllArticles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllArticles = () => {\n  _s();\n  const [hashes, setHashes] = useState([]);\n  async function fetchHashes() {\n    try {\n      const response = await fetch('http://localhost:5000');\n      if (!response.ok) {\n        throw new Error(`Error fetching articles: ${response}`);\n      }\n      const data = await response.json();\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  }\n  async function fetchAllArticles() {}\n  useEffect(() => {\n    fetchAllArticles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"News Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), hashes.map(hash => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"`https://gateway.pinata.cloud/ipfs/$\", hash, \"`\"]\n    }, hash, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AllArticles, \"yKDZGTAJNb0db3vQPL911R+yAaY=\");\n_c = AllArticles;\nexport default AllArticles;\nvar _c;\n$RefreshReg$(_c, \"AllArticles\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AllArticles","_s","hashes","setHashes","fetchHashes","response","fetch","ok","Error","data","json","console","log","error","fetchAllArticles","children","fileName","_jsxFileName","lineNumber","columnNumber","map","hash","_c","$RefreshReg$"],"sources":["C:/Users/prabal gupta/OneDrive/Documents/OpinioNect-figma/client/src/components/AllArticles.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nconst AllArticles = () => {\r\n  const [hashes, setHashes] = useState([]);\r\n\r\n  async function fetchHashes() {\r\n    try {\r\n      const response = await fetch('http://localhost:5000');\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching articles: ${response}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log(data)\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return [];\r\n    }\r\n  }\r\n  async function fetchAllArticles() {\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAllArticles();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>News Articles</h2>\r\n      {hashes.map((hash) => (\r\n        <h3 key={hash}>`https://gateway.pinata.cloud/ipfs/${hash}`</h3>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllArticles;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,eAAeQ,WAAWA,CAAA,EAAG;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC;MACrD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,4BAA2BH,QAAS,EAAC,CAAC;MACzD;MACA,MAAMI,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO,EAAE;IACX;EACF;EACA,eAAeC,gBAAgBA,CAAA,EAAG,CAElC;EAEAjB,SAAS,CAAC,MAAM;IACdiB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBjB,MAAM,CAACkB,GAAG,CAAEC,IAAI,iBACftB,OAAA;MAAAgB,QAAA,GAAe,sCAAoC,EAACM,IAAI,EAAC,GAAC;IAAA,GAAjDA,IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiD,CAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjCID,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}