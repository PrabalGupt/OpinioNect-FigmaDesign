{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prabal gupta\\\\OneDrive\\\\Documents\\\\OpinioNect-figma\\\\client\\\\src\\\\components\\\\AllArticles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport pinataSDK from '@pinata/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pinata = pinataSDK(\"557399d16bb0d33bf535\",\n// apiKey\n\"8e8745baa310378c364839c6eebd5a034fd6a491cf7b35261ad0ca4bcb94bf38\" // apiSecretKey\n);\nconst AllArticles = () => {\n  _s();\n  const [hashes, setHashes] = useState([]);\n  const articleFetch = async articleHash => {\n    const filters = {\n      status: 'pinned',\n      hashContains: articleHash\n    };\n    try {\n      const res = await pinata.pinList(filters);\n      // Do something with the response, e.g., fetch articles from IPFS using the hash\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  async function fetchHashes() {\n    try {\n      const response = await fetch('http://localhost:5000');\n      if (!response.ok) {\n        throw new Error(`Error fetching articles: ${response}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  }\n  async function fetchAllArticles() {\n    try {\n      const fetchedHashes = await fetchHashes();\n      setHashes(fetchedHashes);\n      await Promise.all(fetchedHashes.map(h => articleFetch(h)));\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n    }\n  }\n  useEffect(() => {\n    fetchAllArticles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"News Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), hashes.map(hash => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: hash\n    }, hash, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AllArticles, \"yKDZGTAJNb0db3vQPL911R+yAaY=\");\n_c = AllArticles;\nexport default AllArticles;\nvar _c;\n$RefreshReg$(_c, \"AllArticles\");","map":{"version":3,"names":["React","useState","useEffect","pinataSDK","jsxDEV","_jsxDEV","pinata","AllArticles","_s","hashes","setHashes","articleFetch","articleHash","filters","status","hashContains","res","pinList","console","log","error","fetchHashes","response","fetch","ok","Error","data","json","fetchAllArticles","fetchedHashes","Promise","all","map","h","children","fileName","_jsxFileName","lineNumber","columnNumber","hash","_c","$RefreshReg$"],"sources":["C:/Users/prabal gupta/OneDrive/Documents/OpinioNect-figma/client/src/components/AllArticles.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport pinataSDK from '@pinata/sdk';\r\nconst pinata = pinataSDK(\r\n  \"557399d16bb0d33bf535\", // apiKey\r\n  \"8e8745baa310378c364839c6eebd5a034fd6a491cf7b35261ad0ca4bcb94bf38\" // apiSecretKey\r\n);\r\n\r\nconst AllArticles = () => {\r\n  const [hashes, setHashes] = useState([]);\r\n\r\n  const articleFetch = async (articleHash) => {\r\n    const filters = {\r\n      status: 'pinned',\r\n      hashContains: articleHash,\r\n    };\r\n\r\n    try {\r\n      const res = await pinata.pinList(filters);\r\n      // Do something with the response, e.g., fetch articles from IPFS using the hash\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  async function fetchHashes() {\r\n    try {\r\n      const response = await fetch('http://localhost:5000');\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching articles: ${response}`);\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async function fetchAllArticles() {\r\n    try {\r\n      const fetchedHashes = await fetchHashes();\r\n      setHashes(fetchedHashes);\r\n      await Promise.all(fetchedHashes.map((h) => articleFetch(h)));\r\n    } catch (error) {\r\n      console.error('Error fetching articles:', error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAllArticles();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>News Articles</h2>\r\n      {hashes.map((hash) => (\r\n        <h3 key={hash}>{hash}</h3>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllArticles;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpC,MAAMC,MAAM,GAAGH,SAAS,CACtB,sBAAsB;AAAE;AACxB,kEAAkE,CAAC;AACrE,CAAC;AAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,YAAY,GAAG,MAAOC,WAAW,IAAK;IAC1C,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,QAAQ;MAChBC,YAAY,EAAEH;IAChB,CAAC;IAED,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMV,MAAM,CAACW,OAAO,CAACJ,OAAO,CAAC;MACzC;MACAK,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAClB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,eAAeC,WAAWA,CAAA,EAAG;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC;MACrD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,4BAA2BH,QAAS,EAAC,CAAC;MACzD;MACA,MAAMI,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAON,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO,EAAE;IACX;EACF;EAEA,eAAeQ,gBAAgBA,CAAA,EAAG;IAChC,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMR,WAAW,CAAC,CAAC;MACzCX,SAAS,CAACmB,aAAa,CAAC;MACxB,MAAMC,OAAO,CAACC,GAAG,CAACF,aAAa,CAACG,GAAG,CAAEC,CAAC,IAAKtB,YAAY,CAACsB,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF;EAEAlB,SAAS,CAAC,MAAM;IACd0B,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrB7B,MAAM,CAACuB,GAAG,CAAEO,IAAI,iBACflC,OAAA;MAAA6B,QAAA,EAAgBK;IAAI,GAAXA,IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAtDID,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AAwDjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}